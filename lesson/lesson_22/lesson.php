<?php
//Задача 28.1
//
//Сделайте класс Post (должность), в котором будут следующие свойства,
// доступные только для чтения: name (название должности) и salary (зарплата на этой должности).
//
//Задача 28.2
//
//Создайте несколько объектов класса Post: программист, менеджер водитель.
//
//Задача 28.3
//
//Сделайте класс Employee (работник), в котором будут следующие свойства:
// name (имя) и surname (фамилия). Пусть начальные значения этих свойств
// будут передаваться параметром в конструктор.
//
//Задача 28.4
//
//Сделайте геттеры и сеттеры для свойств name и surname.
//
//Задача 28.5
//
//Пусть теперь третьим параметром конструктора будет передаваться должность работника,
// представляющая собой объект класса Post. Укажите тип этого параметра в явном виде.
//
//Задача 28.6
//
//Сделайте так, чтобы должность работника (то есть переданный объект с должностью) записывалась в свойство post.
//
//Задача 28.7
//
//Создайте объект класса Employee с должностью программист.
// При его создании используйте один из объектов класса Post, созданный нами ранее.
//
//Задача 28.8
//
//Выведите на экран имя, фамилию, должность и зарплату созданного работника.
//
//Задача 28.9
//
//Реализуйте в классе Employee метод changePost, который будет изменять должность работника на другую.
// Метод должен принимать параметром объект класса Post.
// Укажите в методе тип принимаемого параметра в явном виде.


require_once 'Post.php';
require_once 'Employee.php';

$post1 = new Post('Программист', 1000);
$post2 = new Post('Менеджер', 2000);
$post3 = new Post('Водитель', 1500);

$programmer = new Employee('Виталий', 'Фёдоров', $post1->getName());


echo $programmer->getPost();
echo $programmer->getName();
echo $programmer->getSurname();

$programmer->changePost($post2->getName());

echo $programmer->getPost();